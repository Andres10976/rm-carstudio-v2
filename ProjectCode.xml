This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2024-12-30T08:52:59.713Z

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.
</notes>

<additional_info>

For more information about Repomix, visit: https://github.com/yamadashy/repomix
</additional_info>

</file_summary>

<repository_structure>
.gitignore
app/api/contact/route.ts
app/globals.css
app/layout.tsx
app/page.tsx
components/layout/Footer.tsx
components/layout/Navbar.tsx
components/sections/AboutUs.tsx
components/sections/ContactSection.tsx
components/sections/Hero.tsx
components/sections/ServicesSection.tsx
components/sections/VideoGallery.tsx
components/ui/BrandIcon.tsx
components/ui/Button.tsx
components/ui/Container.tsx
eslint.config.mjs
lib/constants.tsx
lib/utils.ts
next.config.ts
package.json
postcss.config.mjs
public/file.svg
public/globe.svg
public/next.svg
public/vercel.svg
public/window.svg
README.md
tailwind.config.ts
tsconfig.json
</repository_structure>

<repository_files>
This section contains the contents of the repository's files.

<file path=".gitignore">
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts
</file>

<file path="app/api/contact/route.ts">
// app/api/contact/route.ts
import { NextResponse } from "next/server";
import { Resend } from "resend";

// Validate environment variables
const RESEND_API_KEY = process.env.RESEND_API_KEY;
const CONTACT_EMAIL = process.env.CONTACT_EMAIL;

if (!RESEND_API_KEY) {
  console.error("Missing RESEND_API_KEY environment variable");
}

if (!CONTACT_EMAIL) {
  console.error("Missing CONTACT_EMAIL environment variable");
}

// Initialize Resend only if we have an API key
const resend = RESEND_API_KEY ? new Resend(RESEND_API_KEY) : null;

export async function POST(request: Request) {
  try {
    // Check if Resend is properly initialized
    if (!resend) {
      throw new Error("Email service not configured properly");
    }

    if (!CONTACT_EMAIL) {
      throw new Error("Recipient email not configured");
    }

    const body = await request.json();
    const { name, email, phone, message } = body;

    // Enhanced validation
    if (!name?.trim()) {
      return NextResponse.json(
        { error: "El nombre es requerido" },
        { status: 400 }
      );
    }

    if (!email?.trim()) {
      return NextResponse.json(
        { error: "El correo electrónico es requerido" },
        { status: 400 }
      );
    }

    if (!message?.trim()) {
      return NextResponse.json(
        { error: "El mensaje es requerido" },
        { status: 400 }
      );
    }

    // Validate email format
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return NextResponse.json(
        { error: "Formato de correo electrónico inválido" },
        { status: 400 }
      );
    }

    // Send email using Resend
    const result = await resend.emails.send({
      from: "RM Car Studio <onboarding@resend.dev>",
      to: CONTACT_EMAIL,
      subject: `Nueva Consulta de ${name}`,
      html: `
        <h2>Nuevo Mensaje del Formulario de Contacto</h2>
        <p><strong>Nombre:</strong> ${name}</p>
        <p><strong>Correo:</strong> ${email}</p>
        <p><strong>Teléfono:</strong> ${phone || "No proporcionado"}</p>
        <p><strong>Mensaje:</strong></p>
        <p>${message}</p>
        <hr>
        <p style="color: #666; font-size: 14px;">Este mensaje fue enviado desde el formulario de contacto de RM Car Studio.</p>
      `,
      text: `
        Nuevo Mensaje del Formulario de Contacto

        Nombre: ${name}
        Correo: ${email}
        Teléfono: ${phone || "No proporcionado"}
        
        Mensaje:
        ${message}
        
        ---
        Este mensaje fue enviado desde el formulario de contacto de RM Car Studio.
      `,
    });

    if (result.error) {
      throw new Error(result.error.message);
    }

    return NextResponse.json(
      { success: true, message: "Email sent successfully" },
      { status: 200 }
    );
  } catch (error: unknown) {
    console.error("Error sending email:", error);
    const errorMessage =
      error instanceof Error ? error.message : "An unknown error occurred";
    return NextResponse.json(
      {
        error:
          "Error al enviar el mensaje. Por favor intente nuevamente más tarde.",
        details: errorMessage,
      },
      { status: 500 }
    );
  }
}
</file>

<file path="app/globals.css">
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Trajan Pro Fonts */
@font-face {
  font-family: "TrajanPro-Regular";
  src: url("https://db.onlinewebfonts.com/t/c07d5c6528b6cc0eac08afd7a3199657.eot");
  src: url("https://db.onlinewebfonts.com/t/c07d5c6528b6cc0eac08afd7a3199657.eot?#iefix")
      format("embedded-opentype"),
    url("https://db.onlinewebfonts.com/t/c07d5c6528b6cc0eac08afd7a3199657.woff2")
      format("woff2"),
    url("https://db.onlinewebfonts.com/t/c07d5c6528b6cc0eac08afd7a3199657.woff")
      format("woff"),
    url("https://db.onlinewebfonts.com/t/c07d5c6528b6cc0eac08afd7a3199657.ttf")
      format("truetype"),
    url("https://db.onlinewebfonts.com/t/c07d5c6528b6cc0eac08afd7a3199657.svg#TrajanPro-Regular")
      format("svg");
}

@font-face {
  font-family: "Trajan Pro Bold";
  src: url("https://db.onlinewebfonts.com/t/12d2fa3dcf227b9538084a6bcfeafcf0.eot");
  src: url("https://db.onlinewebfonts.com/t/12d2fa3dcf227b9538084a6bcfeafcf0.eot?#iefix")
      format("embedded-opentype"),
    url("https://db.onlinewebfonts.com/t/12d2fa3dcf227b9538084a6bcfeafcf0.woff2")
      format("woff2"),
    url("https://db.onlinewebfonts.com/t/12d2fa3dcf227b9538084a6bcfeafcf0.woff")
      format("woff"),
    url("https://db.onlinewebfonts.com/t/12d2fa3dcf227b9538084a6bcfeafcf0.ttf")
      format("truetype"),
    url("https://db.onlinewebfonts.com/t/12d2fa3dcf227b9538084a6bcfeafcf0.svg#Trajan Pro Bold")
      format("svg");
}

/* Comfortaa Fonts */
@font-face {
  font-family: "Comfortaa Regular";
  src: url("https://db.onlinewebfonts.com/t/2399cc27c387c2d15426ad977462df87.eot");
  src: url("https://db.onlinewebfonts.com/t/2399cc27c387c2d15426ad977462df87.eot?#iefix")
      format("embedded-opentype"),
    url("https://db.onlinewebfonts.com/t/2399cc27c387c2d15426ad977462df87.woff2")
      format("woff2"),
    url("https://db.onlinewebfonts.com/t/2399cc27c387c2d15426ad977462df87.woff")
      format("woff"),
    url("https://db.onlinewebfonts.com/t/2399cc27c387c2d15426ad977462df87.ttf")
      format("truetype"),
    url("https://db.onlinewebfonts.com/t/2399cc27c387c2d15426ad977462df87.svg#Comfortaa Regular")
      format("svg");
}

@font-face {
  font-family: "Comfortaa Bold V2";
  src: url("https://db.onlinewebfonts.com/t/70f9644542515286487b2b268beffbf8.eot");
  src: url("https://db.onlinewebfonts.com/t/70f9644542515286487b2b268beffbf8.eot?#iefix")
      format("embedded-opentype"),
    url("https://db.onlinewebfonts.com/t/70f9644542515286487b2b268beffbf8.woff2")
      format("woff2"),
    url("https://db.onlinewebfonts.com/t/70f9644542515286487b2b268beffbf8.woff")
      format("woff"),
    url("https://db.onlinewebfonts.com/t/70f9644542515286487b2b268beffbf8.ttf")
      format("truetype"),
    url("https://db.onlinewebfonts.com/t/70f9644542515286487b2b268beffbf8.svg#Comfortaa Bold V2")
      format("svg");
}

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: "Comfortaa Regular", sans-serif;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "TrajanPro-Regular", serif;
}
</file>

<file path="app/layout.tsx">
import type { Metadata } from "next";
import "./globals.css";

export const metadata: Metadata = {
  title: "RM Car Studio | Detallado Automotriz Profesional",
  description:
    "Servicios profesionales de detallado automotriz, recubrimiento cerámico y protección de pintura en Costa Rica",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="es">
      <head>
        <link
          href="https://db.onlinewebfonts.com/c/c07d5c6528b6cc0eac08afd7a3199657?family=TrajanPro-Regular"
          rel="stylesheet"
        />
        <link
          href="https://db.onlinewebfonts.com/c/12d2fa3dcf227b9538084a6bcfeafcf0?family=Trajan+Pro+Bold"
          rel="stylesheet"
        />
        <link
          href="https://db.onlinewebfonts.com/c/2399cc27c387c2d15426ad977462df87?family=Comfortaa+Regular"
          rel="stylesheet"
        />
        <link
          href="https://db.onlinewebfonts.com/c/70f9644542515286487b2b268beffbf8?family=Comfortaa+Bold+V2"
          rel="stylesheet"
        />
      </head>
      <body className="font-comfortaa">{children}</body>
    </html>
  );
}
</file>

<file path="app/page.tsx">
import Navbar from "@/components/layout/Navbar";
import Footer from "@/components/layout/Footer";
import Hero from "@/components/sections/Hero";
import ServicesSection from "@/components/sections/ServicesSection";
import VideoGallery from "@/components/sections/VideoGallery";
import ContactSection from "@/components/sections/ContactSection";
import AboutSection from "@/components/sections/AboutUs";

export default function Home() {
  return (
    <>
      <Navbar />
      <main>
        <Hero />
        <AboutSection />
        <ServicesSection />
        <VideoGallery />
        <ContactSection />
      </main>
      <Footer />
    </>
  );
}
</file>

<file path="components/layout/Footer.tsx">
"use client";

import { MapPin, Phone, Mail, ArrowUpCircle } from "lucide-react";
import Link from "next/link";
import Image from "next/image";
import { BrandIcon } from "../ui/BrandIcon";
import { motion } from "framer-motion";
import {
  COMPANY_NAME,
  PHONE_NUMBER,
  EMAIL,
  ADDRESS,
  SOCIAL_LINKS,
  NAV_ITEMS,
} from "@/lib/constants";

type SocialPlatform = "facebook" | "instagram" | "whatsapp" | "youtube";

export default function Footer() {
  const scrollToTop = () => {
    window.scrollTo({ top: 0, behavior: "smooth" });
  };

  return (
    <footer className="relative bg-gradient-to-b from-black via-black to-black/95 text-white pt-16 pb-8 overflow-hidden">
      {/* Background Pattern */}
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_center,rgba(247,208,70,0.05)_0%,rgba(0,0,0,0)_70%)]" />

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
        {/* Top Section with Logo and Scroll to Top */}
        <div className="flex justify-between items-start mb-16">
          <Link href="/" className="group">
            <div className="flex items-center">
              <div className="relative w-16 h-16 flex items-center justify-center transition-transform duration-300 group-hover:scale-105">
                <div className="absolute inset-0 bg-gray-100 rounded-full" />
                <Image
                  src="/images/logo.png"
                  alt="RM Car Studio"
                  width={56}
                  height={56}
                  className="relative z-10 object-contain p-2"
                />
              </div>
              <div className="ml-3">
                <span className="font-trajan text-xl tracking-wider">
                  RM Car Studio
                </span>
                <span className="block text-xs text-primary-gold tracking-widest uppercase">
                  Professional Detailers
                </span>
              </div>
            </div>
          </Link>

          <button
            onClick={scrollToTop}
            className="p-2 hover:text-primary-gold transition-colors"
            aria-label="Scroll to top"
          >
            <ArrowUpCircle className="w-8 h-8" />
          </button>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-12 mb-16">
          {/* Company Info */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5 }}
          >
            <h3 className="font-trajan text-2xl mb-6">Sobre Nosotros</h3>
            <p className="text-gray-400 mb-8 leading-relaxed">
              Expertos en detallado automotriz y protección de pintura,
              ofreciendo servicios premium con certificaciones internacionales.
            </p>
            <div className="flex space-x-6">
              {Object.entries(SOCIAL_LINKS)
                .slice(0, 3)
                .map(([platform, url]) => (
                  <Link
                    key={platform}
                    href={url}
                    className="transform hover:scale-110 hover:text-primary-gold transition-all duration-300"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    <BrandIcon
                      brand={platform as SocialPlatform}
                      className="w-6 h-6"
                    />
                  </Link>
                ))}
            </div>
          </motion.div>

          {/* Quick Links */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5, delay: 0.2 }}
          >
            <h4 className="font-trajan text-2xl mb-6">Enlaces Rápidos</h4>
            <ul className="space-y-4">
              {NAV_ITEMS.map((item, index) => (
                <motion.li
                  key={item.name}
                  initial={{ opacity: 0, x: -20 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.3, delay: index * 0.1 }}
                >
                  <Link
                    href={item.href}
                    className="text-gray-400 hover:text-primary-gold transition-colors flex items-center group"
                  >
                    <span className="w-2 h-2 bg-primary-gold rounded-full mr-3 transform scale-0 group-hover:scale-100 transition-transform" />
                    {item.name}
                  </Link>
                </motion.li>
              ))}
            </ul>
          </motion.div>

          {/* Contact Info */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5, delay: 0.4 }}
          >
            <h4 className="font-trajan text-2xl mb-6">Contacto</h4>
            <ul className="space-y-6">
              <li className="flex items-start space-x-4">
                <div className="mt-1">
                  <MapPin className="w-5 h-5 text-primary-gold" />
                </div>
                <Link
                  href={SOCIAL_LINKS.maps}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="text-gray-400 hover:text-primary-gold transition-colors flex-1"
                >
                  {ADDRESS}
                </Link>
              </li>
              <li className="flex items-center space-x-4">
                <Phone className="w-5 h-5 text-primary-gold" />
                <Link
                  href={`tel:${PHONE_NUMBER.replace(/\s/g, "")}`}
                  className="text-gray-400 hover:text-primary-gold transition-colors"
                >
                  {PHONE_NUMBER}
                </Link>
              </li>
              <li className="flex items-center space-x-4">
                <Mail className="w-5 h-5 text-primary-gold" />
                <Link
                  href={`mailto:${EMAIL}`}
                  className="text-gray-400 hover:text-primary-gold transition-colors"
                >
                  {EMAIL}
                </Link>
              </li>
            </ul>
          </motion.div>
        </div>

        {/* Copyright */}
        <div className="border-t border-gray-800 pt-8 mt-8">
          <p className="text-gray-400 text-sm text-center">
            © {new Date().getFullYear()} {COMPANY_NAME}. Todos los derechos
            reservados.
          </p>
        </div>
      </div>
    </footer>
  );
}
</file>

<file path="components/layout/Navbar.tsx">
"use client";

import { useState, useEffect } from "react";
import { Menu, X } from "lucide-react";
import Link from "next/link";
import Image from "next/image";
import { motion, AnimatePresence } from "framer-motion";
import { NAV_ITEMS } from "@/lib/constants";
import { Button } from "../ui/Button";

export default function Navbar() {
  const [isOpen, setIsOpen] = useState(false);
  const [scrolled, setScrolled] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setScrolled(window.scrollY > 20);
    };
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  return (
    <nav
      className={`fixed top-0 w-full z-50 transition-all duration-500 ${
        scrolled ? "bg-black/95 backdrop-blur-md py-2" : "bg-transparent py-4"
      }`}
    >
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center">
          {/* Enhanced Logo Section */}
          <Link href="/" className="relative z-10 group">
            <div className="flex items-center">
              <div className="relative w-16 h-16 flex items-center justify-center transition-transform duration-300 group-hover:scale-105">
                <div className="absolute inset-0 bg-gray-100 rounded-full"></div>
                <Image
                  src="/images/logo.png"
                  alt="RM Car Studio"
                  width={56}
                  height={56}
                  className="relative z-10 object-contain p-2"
                  priority
                />
              </div>
              <div className="ml-3">
                <span className="font-trajan text-white text-xl tracking-wider">
                  RM Car Studio
                </span>
                <span className="block text-xs text-[#C4A763] tracking-widest uppercase">
                  Professional Detailers
                </span>
              </div>
            </div>
          </Link>

          {/* Enhanced Desktop Navigation */}
          <div className="hidden md:flex items-center space-x-8">
            {NAV_ITEMS.map((item) => (
              <Link
                key={item.name}
                href={item.href}
                className="font-trajan text-sm text-white hover:text-primary-gold transition-all duration-300 relative group"
              >
                {item.name}
                <span className="absolute bottom-0 left-0 w-0 h-0.5 bg-primary-gold transition-all duration-300 group-hover:w-full" />
              </Link>
            ))}
            <Button
              size="sm"
              className="bg-primary-gold text-black hover:bg-primary-gold/90 transition-all duration-300 transform hover:scale-105"
            >
              Cotizar
            </Button>
          </div>

          {/* Enhanced Mobile Menu Button */}
          <button
            onClick={() => setIsOpen(!isOpen)}
            className="md:hidden relative z-10 text-white hover:text-primary-gold transition-colors"
            aria-label="Toggle menu"
          >
            {isOpen ? <X size={24} /> : <Menu size={24} />}
          </button>
        </div>
      </div>

      {/* Enhanced Mobile Navigation */}
      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -20 }}
            transition={{ duration: 0.3 }}
            className="absolute top-0 left-0 w-full bg-black/95 backdrop-blur-lg pt-24 pb-8 px-4"
          >
            <div className="flex flex-col space-y-4">
              {NAV_ITEMS.map((item, index) => (
                <motion.div
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: index * 0.1 }}
                  key={item.name}
                >
                  <Link
                    href={item.href}
                    className="text-white hover:text-primary-gold transition-colors py-2 text-center font-trajan block"
                    onClick={() => setIsOpen(false)}
                  >
                    {item.name}
                  </Link>
                </motion.div>
              ))}
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: NAV_ITEMS.length * 0.1 }}
              >
                <Button className="w-full mt-4 bg-primary-gold text-black hover:bg-primary-gold/90">
                  Cotizar
                </Button>
              </motion.div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </nav>
  );
}
</file>

<file path="components/sections/AboutUs.tsx">
"use client";

import React from "react";
import { motion } from "framer-motion";
import Image from "next/image";
import { Container } from "../ui/Container";
import { Button } from "../ui/Button";

const AboutSection = () => {
  const milestones = [
    {
      year: "2018",
      title: "Fundación",
      description:
        "Establecimiento de nuestra firma especializada en detallado automotriz de alta gama",
    },
    {
      year: "2020",
      title: "Certificación en Recubrimientos Cerámicos",
      description:
        "Acreditación internacional en tecnologías de protección cerámica",
    },
    {
      year: "2022",
      title: "Certificación PPF",
      description:
        "Especialización en sistemas avanzados de protección de pintura",
    },
  ];

  return (
    <section className="py-24 bg-black relative overflow-hidden">
      <Container>
        <div className="grid lg:grid-cols-2 gap-12 items-start">
          {/* Left Content */}
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="space-y-8"
          >
            <div>
              <h2 className="font-trajan text-3xl text-white mb-2 tracking-wider">
                ¿QUIÉNES SOMOS?
              </h2>
              <h3 className="font-trajan text-4xl mb-6 bg-gradient-to-r from-primary-gold to-yellow-300 bg-clip-text text-transparent leading-tight tracking-wide">
                Excelencia en Detallado Automotriz
              </h3>
            </div>

            <p className="text-gray-300 leading-relaxed text-lg">
              En RM Car Studio, representamos la vanguardia en el cuidado y
              protección automotriz. Nuestro equipo de especialistas
              certificados internacionalmente emplea tecnologías de última
              generación y métodos avanzados para ofrecer resultados
              excepcionales en cada servicio.
            </p>

            <div className="space-y-8">
              {milestones.map((milestone, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.4, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="relative"
                >
                  <div className="flex gap-6">
                    <div className="w-20 text-primary-gold font-trajan text-2xl tracking-wider">
                      {milestone.year}
                    </div>
                    <div className="flex-1">
                      <h4 className="text-white font-trajan mb-2 tracking-wide text-lg">
                        {milestone.title}
                      </h4>
                      <p className="text-gray-400">{milestone.description}</p>
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>

            <Button className="bg-primary-gold text-black hover:bg-primary-gold/90 transform hover:scale-105 transition-all duration-300">
              Conocer Más
            </Button>
          </motion.div>

          {/* Right side - Image and Certifications */}
          <motion.div
            initial={{ opacity: 0, x: 20 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="space-y-8"
          >
            <div className="relative aspect-[4/3] rounded-lg overflow-hidden">
              <Image
                src="/images/owners.png"
                alt="RM Car Studio Team"
                fill
                className="object-cover"
              />
              <div className="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent" />
            </div>

            {/* Certifications Section */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.2 }}
              className="bg-white/5 backdrop-blur-sm rounded-lg p-6"
            >
              <h4 className="font-trajan text-lg text-white mb-4 text-center">
                Certificaciones Internacionales
              </h4>
              <div className="flex justify-center items-center gap-8">
                <Image
                  src="/images/gtechniq-certified.png"
                  alt="Gtechniq Certified"
                  width={140}
                  height={70}
                  className="object-contain"
                />
                <Image
                  src="/images/Stek_Certified.png"
                  alt="Stek Certified"
                  width={140}
                  height={70}
                  className="object-contain"
                />
              </div>
            </motion.div>
          </motion.div>
        </div>
      </Container>
    </section>
  );
};

export default AboutSection;
</file>

<file path="components/sections/ContactSection.tsx">
"use client";

import React, { useState } from "react";
import { motion } from "framer-motion";
import {
  Mail,
  Phone,
  MapPin,
  Calendar,
  ArrowRight,
  Loader2,
  CheckCircle2,
  AlertCircle,
} from "lucide-react";
import { Container } from "../ui/Container";
import { Button } from "../ui/Button";
import {
  PHONE_NUMBER,
  EMAIL,
  ADDRESS,
  CALENDLY_LINK,
  SOCIAL_LINKS,
} from "@/lib/constants";

const ContactSection = () => {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    phone: "",
    message: "",
  });

  const [status, setStatus] = useState<{
    type: "idle" | "loading" | "success" | "error";
    message?: string;
  }>({
    type: "idle",
  });

  const handleChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    setFormData((prev) => ({
      ...prev,
      [e.target.name]: e.target.value,
    }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setStatus({ type: "loading" });

    try {
      const response = await fetch("/api/contact", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error || "Error sending message");
      }

      if (data.error) {
        throw new Error(data.error);
      }

      // Only clear form and show success if we got a success response
      if (data.success) {
        setFormData({ name: "", email: "", phone: "", message: "" });
        setStatus({
          type: "success",
          message:
            "¡Mensaje enviado con éxito! Nos pondremos en contacto pronto.",
        });

        // Reset status after 5 seconds
        setTimeout(() => {
          setStatus({ type: "idle" });
        }, 5000);
      }
    } catch (error: unknown) {
      setStatus({
        type: "error",
        message:
          error instanceof Error
            ? error.message
            : "Error al enviar el mensaje. Por favor intente nuevamente.",
      });

      // Reset error status after 5 seconds
      setTimeout(() => {
        setStatus({ type: "idle" });
      }, 5000);
    }
  };

  return (
    <section className="relative py-24 bg-black overflow-hidden">
      {/* Background Elements */}
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_center,rgba(247,208,70,0.05)_0%,rgba(0,0,0,0)_70%)]" />

      <Container className="relative z-10">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="font-trajan text-3xl text-white mb-4">CONTÁCTENOS</h2>
          <h3 className="font-trajan text-4xl mb-6 bg-gradient-to-r from-primary-gold to-yellow-300 bg-clip-text text-transparent">
            Estamos para Servirle
          </h3>
        </motion.div>

        <div className="grid lg:grid-cols-2 gap-12">
          {/* Contact Form */}
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
          >
            <div className="bg-white/5 backdrop-blur-sm border border-gray-800 p-8 rounded-lg">
              <h4 className="font-trajan text-2xl text-white mb-6">
                Envíenos un Mensaje
              </h4>
              {status.type !== "idle" && (
                <div
                  className={`mb-6 p-4 rounded-lg flex items-center ${
                    status.type === "success"
                      ? "bg-green-500/10 text-green-500"
                      : status.type === "error"
                      ? "bg-red-500/10 text-red-500"
                      : "bg-primary-gold/10 text-primary-gold"
                  }`}
                >
                  {status.type === "success" && (
                    <CheckCircle2 className="h-5 w-5 mr-2" />
                  )}
                  {status.type === "error" && (
                    <AlertCircle className="h-5 w-5 mr-2" />
                  )}
                  {status.type === "loading" && (
                    <Loader2 className="h-5 w-5 mr-2 animate-spin" />
                  )}
                  <p>{status.message}</p>
                </div>
              )}
              <form onSubmit={handleSubmit} className="space-y-6">
                <div>
                  <label
                    htmlFor="name"
                    className="block text-sm text-gray-300 mb-2"
                  >
                    Nombre Completo
                  </label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    value={formData.name}
                    onChange={handleChange}
                    required
                    className="w-full px-4 py-3 bg-black/50 border border-gray-700 rounded-lg focus:ring-2 focus:ring-primary-gold focus:border-transparent text-white placeholder-gray-500"
                    placeholder="Su nombre completo"
                  />
                </div>
                <div>
                  <label
                    htmlFor="email"
                    className="block text-sm text-gray-300 mb-2"
                  >
                    Correo Electrónico
                  </label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    value={formData.email}
                    onChange={handleChange}
                    required
                    className="w-full px-4 py-3 bg-black/50 border border-gray-700 rounded-lg focus:ring-2 focus:ring-primary-gold focus:border-transparent text-white placeholder-gray-500"
                    placeholder="ejemplo@email.com"
                  />
                </div>
                <div>
                  <label
                    htmlFor="phone"
                    className="block text-sm text-gray-300 mb-2"
                  >
                    Teléfono
                  </label>
                  <input
                    type="tel"
                    id="phone"
                    name="phone"
                    value={formData.phone}
                    onChange={handleChange}
                    className="w-full px-4 py-3 bg-black/50 border border-gray-700 rounded-lg focus:ring-2 focus:ring-primary-gold focus:border-transparent text-white placeholder-gray-500"
                    placeholder="(+506) 0000-0000"
                  />
                </div>
                <div>
                  <label
                    htmlFor="message"
                    className="block text-sm text-gray-300 mb-2"
                  >
                    Mensaje
                  </label>
                  <textarea
                    id="message"
                    name="message"
                    value={formData.message}
                    onChange={handleChange}
                    required
                    rows={4}
                    className="w-full px-4 py-3 bg-black/50 border border-gray-700 rounded-lg focus:ring-2 focus:ring-primary-gold focus:border-transparent text-white placeholder-gray-500"
                    placeholder="¿En qué podemos ayudarle?"
                  />
                </div>
                <Button
                  type="submit"
                  className="w-full bg-primary-gold text-black hover:bg-primary-gold/90 group"
                  disabled={status.type === "loading"}
                >
                  <span className="flex items-center justify-center">
                    {status.type === "loading" ? (
                      <>
                        <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                        Enviando...
                      </>
                    ) : (
                      <>
                        Enviar Mensaje
                        <ArrowRight className="ml-2 w-4 h-4 transform group-hover:translate-x-1 transition-transform" />
                      </>
                    )}
                  </span>
                </Button>
              </form>
            </div>
          </motion.div>

          {/* Contact Info & Calendly */}
          <motion.div
            initial={{ opacity: 0, x: 20 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="space-y-8"
          >
            <div className="bg-white/5 backdrop-blur-sm border border-gray-800 p-8 rounded-lg">
              <h4 className="font-trajan text-2xl text-white mb-8">
                Información de Contacto
              </h4>
              <div className="space-y-6">
                <motion.div
                  whileHover={{ x: 10 }}
                  className="flex items-center gap-4 group cursor-pointer"
                  onClick={() =>
                    window.open(`tel:${PHONE_NUMBER.replace(/\s/g, "")}`)
                  }
                >
                  <div className="bg-primary-gold/10 p-4 rounded-lg group-hover:bg-primary-gold/20 transition-colors">
                    <Phone className="w-6 h-6 text-primary-gold" />
                  </div>
                  <div>
                    <p className="text-sm text-gray-400">Teléfono</p>
                    <p className="text-white group-hover:text-primary-gold transition-colors">
                      {PHONE_NUMBER}
                    </p>
                  </div>
                </motion.div>

                <motion.div
                  whileHover={{ x: 10 }}
                  className="flex items-center gap-4 group cursor-pointer"
                  onClick={() => window.open(`mailto:${EMAIL}`)}
                >
                  <div className="bg-primary-gold/10 p-4 rounded-lg group-hover:bg-primary-gold/20 transition-colors">
                    <Mail className="w-6 h-6 text-primary-gold" />
                  </div>
                  <div>
                    <p className="text-sm text-gray-400">Email</p>
                    <p className="text-white group-hover:text-primary-gold transition-colors">
                      {EMAIL}
                    </p>
                  </div>
                </motion.div>

                <motion.div
                  whileHover={{ x: 10 }}
                  className="flex items-center gap-4 group cursor-pointer"
                  onClick={() => window.open(SOCIAL_LINKS.maps, "_blank")}
                >
                  <div className="bg-primary-gold/10 p-4 rounded-lg group-hover:bg-primary-gold/20 transition-colors">
                    <MapPin className="w-6 h-6 text-primary-gold" />
                  </div>
                  <div>
                    <p className="text-sm text-gray-400">Dirección</p>
                    <p className="text-white group-hover:text-primary-gold transition-colors">
                      {ADDRESS}
                    </p>
                  </div>
                </motion.div>
              </div>
            </div>

            {/* Calendly Section */}
            <div className="bg-white/5 backdrop-blur-sm border border-gray-800 p-8 rounded-lg">
              <div className="flex items-center gap-4 mb-6">
                <Calendar className="w-8 h-8 text-primary-gold" />
                <h4 className="font-trajan text-2xl text-white">
                  Agende una Cita
                </h4>
              </div>
              <p className="text-gray-400 mb-6">
                Reserve su cita para servicios de detallado utilizando nuestro
                calendario en línea.
              </p>
              <Button
                onClick={() => window.open(CALENDLY_LINK, "_blank")}
                className="w-full bg-black/50 text-white border-2 border-primary-gold hover:bg-primary-gold hover:text-black transition-all duration-300 group"
              >
                <span className="flex items-center justify-center">
                  Agendar Ahora
                  <ArrowRight className="ml-2 w-4 h-4 transform group-hover:translate-x-1 transition-transform" />
                </span>
              </Button>
            </div>
          </motion.div>
        </div>
      </Container>
    </section>
  );
};
export default ContactSection;
</file>

<file path="components/sections/Hero.tsx">
"use client";

import { useState, useRef, useEffect } from "react";
import { motion } from "framer-motion";
import { ChevronDown } from "lucide-react";
import { Container } from "../ui/Container";
import { Button } from "../ui/Button";
import Image from "next/image";

export default function Hero() {
  const videoRef = useRef<HTMLVideoElement>(null);
  const [isVideoLoaded, setIsVideoLoaded] = useState(false);

  useEffect(() => {
    const video = videoRef.current;

    if (video) {
      // Reset video source and load
      video.src = "/videos/intro.mp4";
      video.load();

      // Event listeners
      const handleLoadedData = () => setIsVideoLoaded(true);
      const handleError = (e: Event) => {
        const target = e.target as HTMLVideoElement;
        console.error("Video error:", target.error);
      };

      video.addEventListener("loadeddata", handleLoadedData);
      video.addEventListener("error", handleError);

      // Start playing
      const playPromise = video.play();
      if (playPromise !== undefined) {
        playPromise.catch((error) => {
          console.error("Video play failed:", error);
        });
      }

      // Cleanup function
      return () => {
        video.removeEventListener("loadeddata", handleLoadedData);
        video.removeEventListener("error", handleError);
        video.pause();
        video.src = "";
        video.load();
        setIsVideoLoaded(false);
      };
    }
  }, []); // Empty dependency array to run only on mount

  const scrollToSection = (sectionId: string) => {
    const element = document.getElementById(sectionId);
    if (element) {
      element.scrollIntoView({ behavior: "smooth" });
    }
  };

  return (
    <section
      id="inicio"
      className="relative min-h-screen flex items-center justify-center overflow-hidden"
    >
      {/* Video Background with Enhanced Overlays */}
      <div className="absolute inset-0 w-full h-full">
        {/* Loading State */}
        <div
          className={`absolute inset-0 bg-gradient-to-br from-gray-900 via-black to-gray-800 transition-opacity duration-1000 z-[5] ${
            isVideoLoaded ? "opacity-0" : "opacity-100"
          }`}
        />

        {/* Video */}
        <video
          ref={videoRef}
          playsInline
          muted
          loop
          className="absolute inset-0 w-full h-full object-cover"
        />

        {/* Enhanced Overlays */}
        <div className="absolute inset-0 bg-gradient-to-b from-black/80 via-black/50 to-black/90 z-10" />
        <div className="absolute inset-0 bg-[radial-gradient(ellipse_at_center,rgba(0,0,0,0)_0%,rgba(0,0,0,0.8)_100%)] z-20" />
        <div className="absolute inset-0 bg-black/10 bg-[linear-gradient(45deg,rgba(247,208,70,0.05)_0%,rgba(0,0,0,0)_70%)] z-30" />
      </div>

      {/* Main Content */}
      <Container className="relative z-40 pt-32">
        <div className="max-w-4xl mx-auto text-center">
          {/* Logo Animation */}
          <motion.div
            initial={{ opacity: 0, scale: 0.8 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.8, delay: 0.2, ease: "easeOut" }}
            className="mb-12"
          >
            <div className="inline-block">
              <div className="relative w-32 h-32 flex items-center justify-center mx-auto">
                <motion.div
                  className="absolute inset-0 bg-gradient-to-r from-primary-gold/20 to-yellow-300/20 rounded-full"
                  animate={{
                    scale: [1, 1.1, 1],
                    opacity: [0.5, 0.8, 0.5],
                  }}
                  transition={{
                    duration: 3,
                    repeat: Infinity,
                    ease: "easeInOut",
                  }}
                />
                <div className="absolute inset-0 bg-gray-100 rounded-full transform -translate-y-1" />
                <Image
                  src="/images/logo.png"
                  alt="RM Car Studio"
                  width={96}
                  height={96}
                  className="relative z-10 object-contain p-4"
                  priority
                />
              </div>
            </div>
          </motion.div>

          {/* Main Title with Staggered Animation */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ duration: 0.8 }}
            className="space-y-4"
          >
            <motion.h1
              className="font-trajan text-5xl md:text-6xl lg:text-7xl text-white leading-tight tracking-wider"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.4 }}
            >
              PROTECCIÓN Y
              <motion.span
                className="block mt-2 bg-gradient-to-r from-primary-gold to-yellow-300 bg-clip-text text-transparent"
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: 0.6 }}
              >
                BELLEZA
              </motion.span>
              <motion.span
                className="block mt-2"
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: 0.8 }}
              >
                PARA SU VEHÍCULO
              </motion.span>
            </motion.h1>
          </motion.div>

          {/* Subtitle */}
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 1 }}
            className="text-xl md:text-2xl text-gray-300 mb-12 mt-8 tracking-wide"
          >
            Detallado de alto nivel y recubrimiento cerámico profesional
          </motion.p>

          {/* CTA Buttons */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 1.2 }}
            className="flex flex-col sm:flex-row gap-6 justify-center"
          >
            <Button
              size="lg"
              className="bg-primary-gold text-black hover:bg-primary-gold/90 px-8 py-4 transform hover:scale-105 transition-all duration-300"
              onClick={() => scrollToSection("contacto")}
            >
              Cotizar Ahora
            </Button>
            <Button
              variant="secondary"
              size="lg"
              className="border-2 border-white text-white hover:bg-white/10 px-8 py-4 transform hover:scale-105 transition-all duration-300"
              onClick={() => scrollToSection("servicios")}
            >
              Nuestros Servicios
            </Button>
          </motion.div>
        </div>
      </Container>

      {/* Enhanced Scroll Indicator */}
      <motion.div
        className="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-40"
        initial={{ opacity: 0 }}
        animate={{
          opacity: [0.4, 1, 0.4],
          y: [0, 10, 0],
        }}
        transition={{
          duration: 2,
          repeat: Infinity,
          repeatType: "reverse",
        }}
        onClick={() => scrollToSection("servicios")}
        style={{ cursor: "pointer" }}
      >
        <ChevronDown className="w-8 h-8 text-primary-gold" />
      </motion.div>
    </section>
  );
}
</file>

<file path="components/sections/ServicesSection.tsx">
"use client";

import React from "react";
import { motion } from "framer-motion";
import { Shield, Car, SprayCan, Square } from "lucide-react";
import Image from "next/image";
import { Container } from "../ui/Container";
import { Button } from "../ui/Button";

const ServicesSection = () => {
  const services = [
    {
      icon: <SprayCan className="w-8 h-8" />,
      title: "RECUBRIMIENTO CERÁMICO",
      description: "Protección premium con diferentes durabilidades",
      features: [
        "Categorías: 3, 5 y 9 años de durabilidad",
        "Protección UV avanzada",
        "Brillo superior y duradero",
        "Mantenimiento especializado disponible",
      ],
      image: "/images/gtechniq-certified.png",
      imageWidth: 140,
      imageHeight: 70,
    },
    {
      icon: <Shield className="w-8 h-8" />,
      title: "PAINT PROTECTION FILM",
      description: "Protección física de última generación",
      features: [
        "Estilos: Transparente, Colores y Patrones",
        "Dynoflex para parabrisas y otras áreas",
        "10 años de garantía",
        "Instalación profesional certificada",
      ],
      image: "/images/Stek_Certified.png",
      imageWidth: 140,
      imageHeight: 70,
    },
    {
      icon: <Square className="w-8 h-8" />,
      title: "POLARIZADO DE VIDRIOS",
      description: "Tecnología avanzada para máximo confort",
      features: [
        "Nanocarbón: Control superior de temperatura",
        "Grafeno: Máxima eficiencia térmica",
        "Visibilidad mejorada",
        "Protección UV completa",
      ],
      image: "/images/Stek_Dynoshield_whitebg.png",
      imageWidth: 140,
      imageHeight: 70,
    },
    {
      icon: <Car className="w-8 h-8" />,
      title: "LAVADO PREMIUM",
      description: "Servicio detallado con estándares internacionales",
      features: [
        "Proceso certificado anti-microrayas",
        "Productos y herramientas premium",
        "Aire filtrado especializado",
        "Extras: Lavado de chasis y motor",
      ],
      image: "/images/rupes-logo.png",
      imageWidth: 140,
      imageHeight: 70,
    },
  ];

  return (
    <section className="py-24 bg-black">
      <Container>
        {/* Section Header */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="font-trajan text-3xl mb-4 text-white">
            NUESTROS SERVICIOS
          </h2>
          <h3 className="font-trajan text-4xl mb-6 bg-gradient-to-r from-primary-gold to-yellow-300 bg-clip-text text-transparent">
            Soluciones Profesionales de Protección
          </h3>
          <p className="text-gray-400 max-w-3xl mx-auto">
            Ofrecemos servicios integrales de protección y embellecimiento
            automotriz utilizando productos y técnicas de última generación.
          </p>
        </motion.div>

        {/* Services Grid */}
        <div className="grid md:grid-cols-2 gap-8">
          {services.map((service, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.4, delay: index * 0.1 }}
              viewport={{ once: true }}
              className="bg-black/50 backdrop-blur-sm border border-gray-800 p-6 rounded-lg hover:border-primary-gold/50 transition-all group"
            >
              <div className="flex items-center gap-4 mb-4">
                <div className="p-3 bg-primary-gold/10 rounded-full text-primary-gold">
                  {service.icon}
                </div>
                <h4 className="font-trajan text-xl text-white">
                  {service.title}
                </h4>
              </div>

              <p className="text-gray-400 mb-6">{service.description}</p>

              <ul className="space-y-3 mb-6">
                {service.features.map((feature, fIndex) => (
                  <li
                    key={fIndex}
                    className="flex items-start gap-2 text-sm text-gray-400"
                  >
                    <div className="w-1.5 h-1.5 bg-primary-gold rounded-full mt-2 flex-shrink-0" />
                    {feature}
                  </li>
                ))}
              </ul>

              <div className="flex justify-between items-center">
                <Image
                  src={service.image}
                  alt={`${service.title} certification`}
                  width={service.imageWidth}
                  height={service.imageHeight}
                  className="opacity-50 group-hover:opacity-100 transition-opacity object-contain"
                />
                <Button
                  variant="outline"
                  size="sm"
                  className="text-primary-gold border-primary-gold hover:bg-primary-gold hover:text-black transition-all duration-300"
                >
                  Más Información
                </Button>
              </div>
            </motion.div>
          ))}
        </div>

        {/* Call to Action */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
          className="text-center mt-16"
        >
          <Button
            size="lg"
            className="bg-primary-gold text-black hover:bg-primary-gold/90 transform hover:scale-105 transition-all duration-300"
          >
            Solicitar Cotización
          </Button>
        </motion.div>
      </Container>
    </section>
  );
};

export default ServicesSection;
</file>

<file path="components/sections/VideoGallery.tsx">
"use client";

import React from "react";
import { motion } from "framer-motion";
import { Container } from "../ui/Container";

const VideoGallery = () => {
  // Replace these IDs with actual YouTube video IDs from their channel
  const videoIds = [
    {
      id: "v6yNucdWTAg",
      title: "Adiós a los Arañazos - 4Runner Blindada con PPF",
    },
    {
      id: "YO4BxwbbcSE",
      title: "PPF Tapa Audi - Pruebas de resistencia",
    },
    {
      id: "q3N1rA-PBKQ",
      title: "Paso a paso lavado detallado RM Car Studio",
    },
    {
      id: "LzwEQwkp5U8",
      title: "¿Qué es el PPF?",
    },
    {
      id: "R5RgwgopT0c",
      title: "Nuestra Historia - RM Car Studio",
    },
    {
      id: "CjWaIVAmQRs",
      title: "¿Por qué las personas aplican PPF en su vehículo?",
    },
  ];

  return (
    <section className="py-24 bg-black relative overflow-hidden">
      {/* Background Elements */}
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_center,rgba(247,208,70,0.05)_0%,rgba(0,0,0,0)_70%)]" />

      <Container className="relative z-10">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="font-trajan text-3xl text-white mb-4">
            GALERÍA DE VIDEOS
          </h2>
          <h3 className="font-trajan text-4xl mb-6 bg-gradient-to-r from-primary-gold to-yellow-300 bg-clip-text text-transparent">
            Nuestro Trabajo en Acción
          </h3>
        </motion.div>

        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {videoIds.map((video, index) => (
            <motion.div
              key={video.id}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.4, delay: index * 0.1 }}
              viewport={{ once: true }}
              className="aspect-video"
            >
              <iframe
                className="w-full h-full rounded-lg border border-gray-800"
                src={`https://www.youtube.com/embed/${video.id}`}
                title={video.title}
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                allowFullScreen
              />
            </motion.div>
          ))}
        </div>
      </Container>
    </section>
  );
};

export default VideoGallery;
</file>

<file path="components/ui/BrandIcon.tsx">
// components/ui/BrandIcon.tsx
import { cn } from "@/lib/utils";

interface BrandIconProps extends React.SVGProps<SVGSVGElement> {
  brand: "facebook" | "instagram" | "whatsapp" | "youtube";
  className?: string;
}

export function BrandIcon({ brand, className, ...props }: BrandIconProps) {
  const icons = {
    facebook: (
      <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z" />
    ),
    instagram: (
      <path d="M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.897 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.897-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z" />
    ),
    whatsapp: (
      <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z" />
    ),
    youtube: (
      <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z" />
    ),
  };

  return (
    <svg
      role="img"
      viewBox="0 0 24 24"
      className={cn("h-6 w-6 fill-current", className)}
      {...props}
    >
      {icons[brand]}
    </svg>
  );
}
</file>

<file path="components/ui/Button.tsx">
// components/ui/Button.tsx
import { cn } from "@/lib/utils";
import { ButtonHTMLAttributes, forwardRef } from "react";

interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {
  variant?: "primary" | "secondary" | "outline";
  size?: "sm" | "md" | "lg";
}

const Button = forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant = "primary", size = "md", ...props }, ref) => {
    const variants = {
      primary: "bg-primary-gold hover:bg-primary-gold/90 text-black",
      secondary: "bg-white/10 hover:bg-white/20 text-white",
      outline: "border-2 border-primary-gold hover:bg-primary-gold/10",
    };

    const sizes = {
      sm: "px-4 py-2 text-sm",
      md: "px-6 py-3 text-base",
      lg: "px-8 py-4 text-lg",
    };

    return (
      <button
        className={cn(
          "font-trajan rounded-full transition-colors",
          variants[variant],
          sizes[size],
          className
        )}
        ref={ref}
        {...props}
      />
    );
  }
);

Button.displayName = "Button";

export { Button };
</file>

<file path="components/ui/Container.tsx">
// components/ui/Container.tsx
import { cn } from "@/lib/utils";

interface ContainerProps extends React.HTMLAttributes<HTMLDivElement> {
  as?: keyof JSX.IntrinsicElements;
}

export function Container({
  as: Component = "div",
  className,
  children,
  ...props
}: ContainerProps) {
  return (
    <Component
      className={cn("max-w-7xl mx-auto px-4 sm:px-6 lg:px-8", className)}
      {...props}
    >
      {children}
    </Component>
  );
}
</file>

<file path="eslint.config.mjs">
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
];

export default eslintConfig;
</file>

<file path="lib/constants.tsx">
// lib/constants.ts
export const COMPANY_NAME = "RM Car Studio";
export const PHONE_NUMBER = "+506 72670164";
export const EMAIL = "rmcar.studio@gmail.com";
export const ADDRESS =
  "Moravia, Los Colegios, de Lincoln Plaza 500 metros oeste, dentro de la gasolinera Delta., San José, Costa Rica";
export const SOCIAL_LINKS = {
  facebook: "https://www.facebook.com/rmcar.studio/",
  instagram: "https://instagram.com/autodetailcr",
  whatsapp: "https://wa.me/+50672670164",
  youtube: "https://www.youtube.com/@RMCARSTUDIO-nt3en",
  maps: "https://www.google.com/maps/place/RM+Car+Studio/@9.9627422,-84.0600706,17z/data=!4m6!3m5!1s0x8fa0e5930c217129:0x9264ff8d3414156f!8m2!3d9.9624903!4d-84.0609727!16s%2Fg%2F11h3mpcl52?entry=ttu&g_ep=EgoyMDI0MTIxMS4wIKXMDSoASAFQAw%3D%3D",
};
export const CALENDLY_LINK = "https://calendly.com/rmcarstudio";

export const NAV_ITEMS = [
  { name: "Inicio", href: "#inicio" },
  { name: "Recubrimiento de cerámico", href: "#ceramic-coating" },
  { name: "PPF", href: "#ppf" },
  { name: "Servicios", href: "#servicios" },
  { name: "Galería", href: "#galeria" },
  { name: "Contacto", href: "#contacto" },
];
</file>

<file path="lib/utils.ts">
import { type ClassValue, clsx } from "clsx";
import { twMerge } from "tailwind-merge";

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

// types/index.ts - TypeScript type definitions
export interface Service {
  id: string;
  title: string;
  description: string;
  features: string[];
  price: number;
}

export interface QuoteFormData {
  service: string;
  vehicleType: string;
  name: string;
  email: string;
  phone: string;
  message: string;
}
</file>

<file path="next.config.ts">
import type { NextConfig } from "next";

const nextConfig: NextConfig = {
  /* config options here */
};

export default nextConfig;
</file>

<file path="package.json">
{
  "name": "car-detail-website",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@headlessui/react": "^2.2.0",
    "@radix-ui/react-alert-dialog": "^1.1.4",
    "clsx": "^2.1.1",
    "framer-motion": "^11.15.0",
    "lucide-react": "^0.469.0",
    "next": "15.1.3",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "resend": "^4.0.1",
    "tailwind-merge": "^2.6.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@types/node": "^20.17.10",
    "@types/react": "^19.0.2",
    "@types/react-dom": "^19.0.2",
    "eslint": "^9",
    "eslint-config-next": "15.1.3",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5.7.2"
  }
}
</file>

<file path="postcss.config.mjs">
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;
</file>

<file path="public/file.svg">
<svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>
</file>

<file path="public/globe.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>
</file>

<file path="public/next.svg">
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>
</file>

<file path="public/vercel.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>
</file>

<file path="public/window.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>
</file>

<file path="README.md">
This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.
</file>

<file path="tailwind.config.ts">
import type { Config } from "tailwindcss";

const config: Config = {
  content: [
    "./pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./components/**/*.{js,ts,jsx,tsx,mdx}",
    "./app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      colors: {
        primary: {
          black: "#999999",
          gold: "#F7D046",
          blue: "#0066FF",
          red: "#FF3333",
          gray: "#F5F5F5",
        },
      },
      fontFamily: {
        // Simplified font families
        trajanPro: ["TrajanPro-Regular", "Trajan Pro Bold", "serif"],
        comfortaa: ["Comfortaa Regular", "Comfortaa Bold V2", "sans-serif"],
      },
    },
  },
  plugins: [],
};

export default config;
</file>

<file path="tsconfig.json">
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
</file>

</repository_files>
